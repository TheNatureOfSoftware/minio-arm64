apiVersion: v1
kind: Service
metadata:
  labels:
    app: mysql
  name: mysql
spec:
  ports:
  - name: "3306"
    port: 3306
    protocol: TCP
    targetPort: 3306
  selector:
    app: mysql
  sessionAffinity: None
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: "mysql"
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
      annotations:
        pod.beta.kubernetes.io/init-containers:
          '[{
          "name": "volumizr-in",
          "image": "thenatureofsoftware/volumizr:latest",
          "args": ["in", "minio/mysql", "/var/lib/mysql"],
          "volumeMounts": [{
            "mountPath": "/var/lib/mysql",
            "name": "persistentdata"
          }]
        },
        {
          "name": "chown",
          "image": "tobi312/rpi-mysql:5.6",
          "command": ["chown", "-R", "mysql:mysql", "/var/lib/mysql"],
          "volumeMounts": [{
            "mountPath": "/var/lib/mysql",
            "name": "persistentdata"
          }]
        }]'
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: test
        image: tobi312/rpi-mysql:5.6
        imagePullPolicy: Always
        name: mysql
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: persistentdata
        ports:
        - containerPort: 3306
          protocol: TCP
        resources: {}
      - image: thenatureofsoftware/volumizr:latest
        imagePullPolicy: Always
        name: volumizr-out
        args:
        - out
        - /var/lib/mysql
        - minio/mysql
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: persistentdata
      restartPolicy: Always
      volumes:
      - name: persistentdata
        emptyDir: {}
